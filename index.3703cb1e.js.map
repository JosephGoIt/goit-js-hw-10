{"mappings":"YAAA,IAAMA,EAAW,+BACXC,EAAU,wEACVC,EAAY,GAA8BC,OAA3BH,EAAS,oBAA0BG,OAARF,GAYzC,SAASG,EAAgBC,GAC5B,IAAMC,EAAgB,GAAqCH,OAAlCH,EAAS,2BAA8CG,OAArBF,EAAQ,eAAqBE,OAARE,GAChF,OAAOE,MAAMD,GACRE,MAAK,SAACC,GACH,IAAKA,EAAIC,GACL,MAAM,IAAIC,MAAM,gCAA2CR,OAAXM,EAAIG,SAExD,OAAOH,EAAII,M,ICnBvB,IAAMC,EAAgBC,SAASC,cAAc,iBACvCC,EAAYF,SAASC,cAAc,aACnCE,EAAWH,SAASC,cAAc,WAClCG,EAAUJ,SAASC,cAAc,UAYvC,SAASI,EAAeC,GACpBH,EAASI,UAAUC,QAAQ,SAAU,aACrC,IAAIC,EAAgBH,EAAKI,KAAI,SAAAC,G,IAAGC,EAAID,EAAJC,KAAMC,EAAEF,EAAFE,G,MAAS,kBAAyBzB,OAAPyB,EAAG,MAASzB,OAALwB,EAAK,Y,IAAYE,KAAK,IAC9Ff,EAAcgB,mBAAmB,YAAaN,GAC9CV,EAAcQ,UAAUS,OAAO,Y,CA6BnC,SAASC,EAAQC,GACbd,EAAQe,YAAc,UAAwB/B,OAAd8B,EAAME,SACtChB,EAAQG,UAAUS,OAAO,aACzBjB,EAAcQ,UAAUc,IAAI,Y,CA9ChCjB,EAAQG,UAAUc,IAAI,aDFX7B,MAAML,GACRM,MAAK,SAACC,GACH,IAAIA,EAAIC,GACJ,MAAM,IAAIC,MAAM,0BAAqCR,OAAXM,EAAIG,SAElD,OAAOH,EAAII,M,ICEdL,KAAKY,GACLiB,MAAML,GA4CflB,EAAcwB,iBAAiB,UA9B/B,SAA2BC,GACvBrB,EAASI,UAAUC,QAAQ,YAAa,UACxCN,EAAUK,UAAUc,IAAI,aAExBhC,EADgBmC,EAAEC,OAAOC,OAEpBjC,MAAK,SAAAa,GACF,IAAwBqB,EAAArB,EAAK,GAArBsB,EAAgBD,EAAhBC,IACmCC,EADnBF,EAAXG,OACqC,GAA1ClB,EAAmCiB,EAAnCjB,KAAMmB,EAA6BF,EAA7BE,YAAaC,EAAgBH,EAAhBG,YAC3B9B,EAAU+B,UAAY,+BACO7C,OAAbwC,EAAI,WAENxC,OAFewB,EAAK,gFAGrBxB,OADCwB,EAAK,kCAENxB,OADA2C,EAAY,iCACA3C,OAAZ4C,EAAY,8CAGzB9B,EAAUK,UAAUS,OAAO,aAC3Bb,EAASI,UAAUc,IAAI,Y,IAE1BC,MAAML,E","sources":["src/cat-api.js","src/index.js"],"sourcesContent":["const BASE_URL = \"https://api.thecatapi.com/v1\";\nconst API_KEY = \"live_hgVLmozRnWu8KA5AwXcTnQHagnoN82mIVmdHKvikbJsJw7KLhHIWKYVzJ3B5sXy5\";\nconst breedsURL = `${BASE_URL}/breeds?api_key=${API_KEY}`;\n\nexport function fetchBreeds() {\n    return fetch(breedsURL)\n        .then((res) => {\n            if(!res.ok) {\n                throw new Error(`Error fetching breeds: ${res.status}`);\n            }\n            return res.json();\n        });\n}\n\nexport function fetchCatByBreed(breedId) {\n    const catByBreedURL = `${BASE_URL}/images/search?api_key=${API_KEY}&breed_ids=${breedId}`;\n    return fetch(catByBreedURL)\n        .then((res) => {\n            if (!res.ok) {\n                throw new Error(`Error fetching cat by breed: ${res.status}`);\n            }\n            return res.json();\n    });\n}\n","import { fetchBreeds, fetchCatByBreed} from \"./cat-api\";\n\nconst breedSelectEl = document.querySelector(\".breed-select\");\nconst catInfoEl = document.querySelector(\".cat-info\");\nconst loaderEl = document.querySelector(\".loader\");\nconst errorEl = document.querySelector(\".error\");\n\nerrorEl.classList.add(\"is-hidden\");\n\n// Function to load breeds\nfunction chooseBreed() {\n    fetchBreeds()\n        .then(populateBreeds)\n        .catch(onError);\n}\n\n// Function to populate breed options\nfunction populateBreeds(data) {\n    loaderEl.classList.replace(\"loader\", \"is-hidden\");\n    let optionsMarkup = data.map(({ name, id }) => `<option value=\"${id}\">${name}</option>`).join(\"\");\n    breedSelectEl.insertAdjacentHTML(\"beforeend\", optionsMarkup);\n    breedSelectEl.classList.remove(\"is-hidden\");\n}\n\nchooseBreed();\n\n// Function to handle breed selection change\nfunction handleBreedChange(e) {\n    loaderEl.classList.replace(\"is-hidden\", \"loader\");\n    catInfoEl.classList.add(\"is-hidden\");\n    const breedId = e.target.value;\n    fetchCatByBreed(breedId)\n        .then(data => {\n            const { url, breeds } = data[0];\n            const { name, description, temperament } = breeds[0];\n            catInfoEl.innerHTML = `\n                <img src=\"${url}\" alt=\"${name}\" width=\"400\"/>\n                <div class=\"box\">\n                    <h2>${name}</h2>\n                    <p>${description}</p>\n                    <p>${temperament}</p>\n                </div>\n            `;\n            catInfoEl.classList.remove(\"is-hidden\");\n            loaderEl.classList.add(\"is-hidden\");\n        })\n        .catch(onError);\n}\n\n// Function to handle error\nfunction onError(error) {\n    errorEl.textContent = `Error: ${error.message}`;\n    errorEl.classList.remove(\"is-hidden\");\n    breedSelectEl.classList.add(\"is-hidden\");\n}\n\n// Event listener for breed selection change\nbreedSelectEl.addEventListener(\"change\", handleBreedChange);"],"names":["$ae0c329fb0fb36dc$var$BASE_URL","$ae0c329fb0fb36dc$var$API_KEY","$ae0c329fb0fb36dc$var$breedsURL","concat","$ae0c329fb0fb36dc$export$57b7d3a597416aa2","breedId","catByBreedURL","fetch","then","res","ok","Error","status","json","$b8f9b7833fa37166$var$breedSelectEl","document","querySelector","$b8f9b7833fa37166$var$catInfoEl","$b8f9b7833fa37166$var$loaderEl","$b8f9b7833fa37166$var$errorEl","$b8f9b7833fa37166$var$populateBreeds","data","classList","replace","optionsMarkup","map","param","name","id","join","insertAdjacentHTML","remove","$b8f9b7833fa37166$var$onError","error","textContent","message","add","catch","addEventListener","e","target","value","ref","url","ref1","breeds","description","temperament","innerHTML"],"version":3,"file":"index.3703cb1e.js.map"}